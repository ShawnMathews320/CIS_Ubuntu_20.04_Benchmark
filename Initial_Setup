1.1 Filesystem Configuration
- Directories used for system wide functions should be placed on separate partitions for further protection.
- Users' data can be stored on separate partitions and have stricter mount options.
- If the system is already installed, it is recommended that a full backup be performed before repartitioning the system.
- Note: If you are repartitioning a system that has already been installed, make sure the data  has been copied over to the new partition, unmount it and then remove the data 
from the directory that was in the old partition. Otherwise it will still consume space in the old partition that will be masked when the new filesystem is mounted.

1.1.1 Disable Unused Filesystems
- Native Linux file systems are designed to ensure that built-in security controls function as expected. 
- Non-native filesystems can lead to unexpected consequences to both the security and functionality of the system and should be used with caution.
- Many filesystems are created for niche use cases and are not maintained and supported as the operating systems are updated and patched.

1.1.1.1 Ensure Mounting of cramfs Filesystems is Disabled (Automated)
- The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the 
image.
- Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v cramfs | grep -E '(cramfs|install)'
install /bin/true
# lsmod | grep cramfs
<No output>

-- Remediation:
Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/cramfs.conf or sudo nano /etc/modprobe.d/cramfs.conf and add the following line:
install cramfs /bin/true
Run the following command to unload the cramfs module:
# rmmod cramfs

1.1.1.2 Ensure Mounting of freevxfs Filesystems is Disabled (Automatic)
- The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.
- Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v freevxfs | grep -E '(freevxfs|install)'
install /bin/true
# lsmod | grep freevxfs
<No output>

-- Remediation:
Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/freevxfs.conf or sudo nano /etc/modprobe.d/freevxfs.conf
and add the following line:
install freevxfs /bin/true
Run the following command to unload the freevxfs module:
# rmmod freevxfs

1.1.1.3 Ensure Mounting of jffs2 Filesystems is Disabled (Automated)
- The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.
- Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v jffs2 | grep -E '(jffs2|install)'
install /bin/true
# lsmod | grep jffs2
<No output>

-- Remediation:
Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/jffs2.conf
and add the following line:
install jffs2 /bin/true
Run the following command to unload the jffs2 module:
# rmmod jffs2

1.1.1.4 Ensure Mounting of hfs Filesystem is Disabled (Automatic)
- The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.
- Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v hfs | grep -E '(hfs|install)'
install /bin/true
# lsmod | grep hfs
<No output>

-- Remediation:
Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/hfs.conf
and add the following line:
install hfs /bin/true
Run the following command to unload the hfs module:
# rmmod hf

1.1.1.5 Ensure Mounting of hfsplus Filesytem is Disabled (Automatic)
- The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v hfsplus | grep -E '(hfsplus|install)'
install /bin/true
# lsmod | grep hfsplus
<No output>

-- Remediation:
Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/hfsplus.conf
and add the following line:
install hfsplus /bin/true
Run the following command to unload the hfsplus module:
# rmmod hfsplus

1.1.1.6 Ensure Mounting of udf Filesystem is Disabled (Automatic)
- The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and 
ECMA-167 specifications. This is an open vendor filesystem type for data storage on a 
broad range of media. This filesystem type is necessary to support writing DVDs and newer 
optical disc formats.

- Removing support for unneeded filesystem types reduces the local attack surface of the 
system. If this filesystem type is not needed, disable it.

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v udf | grep -E '(udf|install)'
install /bin/true
# lsmod | grep udf
<No output>

-- Remediation:
Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/udf.conf
and add the following line:
install udf /bin/true
Run the following command to unload the udf module:
# rmmod udf

1.1.1.7 Ensure Mounting of FAT Filesystems is Limited (Manual)
- The FAT filesystem format is primarily used on older windows systems and portable USB drives or flash modules. It comes in three types FAT12 , FAT16 , and FAT32 all 
of which are supported by the vfat kernel module.

- Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

- If utilizing UEFI the FAT filesystem format is required. If this case, ensure that the FAT filesystem is only used where appropriate.

-- Run the following command
grep -E -i '\svfat\s' /etc/fstab
And review that any output is appropriate for your environment
If not utilizing UEFI

-- Run the following commands and verify the output is as indicated:
# modprobe -n -v vfat
install /bin/true
# lsmod | grep vfat
<No output

- Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
Example: vi /etc/modprobe.d/vfat.conf
install vfat /bin/true
Run the following command to unload the vfat module:
# rmmod vfat

- The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the vfat module can prevent boot on UEFI systems.

- FAT filesystems are often used on portable USB sticks and other flash media which are commonly used to transfer files between workstations, removing VFAT support may 
prevent the ability to transfer files in this way.
